package com.uvcrawler.vo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ProxyExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public ProxyExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andHostIsNull() {
			addCriterion("host is null");
			return (Criteria) this;
		}

		public Criteria andHostIsNotNull() {
			addCriterion("host is not null");
			return (Criteria) this;
		}

		public Criteria andHostEqualTo(String value) {
			addCriterion("host =", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostNotEqualTo(String value) {
			addCriterion("host <>", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostGreaterThan(String value) {
			addCriterion("host >", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostGreaterThanOrEqualTo(String value) {
			addCriterion("host >=", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostLessThan(String value) {
			addCriterion("host <", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostLessThanOrEqualTo(String value) {
			addCriterion("host <=", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostLike(String value) {
			addCriterion("host like", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostNotLike(String value) {
			addCriterion("host not like", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostIn(List<String> values) {
			addCriterion("host in", values, "host");
			return (Criteria) this;
		}

		public Criteria andHostNotIn(List<String> values) {
			addCriterion("host not in", values, "host");
			return (Criteria) this;
		}

		public Criteria andHostBetween(String value1, String value2) {
			addCriterion("host between", value1, value2, "host");
			return (Criteria) this;
		}

		public Criteria andHostNotBetween(String value1, String value2) {
			addCriterion("host not between", value1, value2, "host");
			return (Criteria) this;
		}

		public Criteria andPortIsNull() {
			addCriterion("port is null");
			return (Criteria) this;
		}

		public Criteria andPortIsNotNull() {
			addCriterion("port is not null");
			return (Criteria) this;
		}

		public Criteria andPortEqualTo(String value) {
			addCriterion("port =", value, "port");
			return (Criteria) this;
		}

		public Criteria andPortNotEqualTo(String value) {
			addCriterion("port <>", value, "port");
			return (Criteria) this;
		}

		public Criteria andPortGreaterThan(String value) {
			addCriterion("port >", value, "port");
			return (Criteria) this;
		}

		public Criteria andPortGreaterThanOrEqualTo(String value) {
			addCriterion("port >=", value, "port");
			return (Criteria) this;
		}

		public Criteria andPortLessThan(String value) {
			addCriterion("port <", value, "port");
			return (Criteria) this;
		}

		public Criteria andPortLessThanOrEqualTo(String value) {
			addCriterion("port <=", value, "port");
			return (Criteria) this;
		}

		public Criteria andPortLike(String value) {
			addCriterion("port like", value, "port");
			return (Criteria) this;
		}

		public Criteria andPortNotLike(String value) {
			addCriterion("port not like", value, "port");
			return (Criteria) this;
		}

		public Criteria andPortIn(List<String> values) {
			addCriterion("port in", values, "port");
			return (Criteria) this;
		}

		public Criteria andPortNotIn(List<String> values) {
			addCriterion("port not in", values, "port");
			return (Criteria) this;
		}

		public Criteria andPortBetween(String value1, String value2) {
			addCriterion("port between", value1, value2, "port");
			return (Criteria) this;
		}

		public Criteria andPortNotBetween(String value1, String value2) {
			addCriterion("port not between", value1, value2, "port");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("username is null");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("username is not null");
			return (Criteria) this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("username =", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("username <>", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("username >", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("username >=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("username <", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("username <=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("username like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("username not like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameIn(List<String> values) {
			addCriterion("username in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotIn(List<String> values) {
			addCriterion("username not in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("username between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("username not between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("password is null");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("password is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordEqualTo(String value) {
			addCriterion("password =", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotEqualTo(String value) {
			addCriterion("password <>", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThan(String value) {
			addCriterion("password >", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("password >=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThan(String value) {
			addCriterion("password <", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThanOrEqualTo(String value) {
			addCriterion("password <=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLike(String value) {
			addCriterion("password like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotLike(String value) {
			addCriterion("password not like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordIn(List<String> values) {
			addCriterion("password in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotIn(List<String> values) {
			addCriterion("password not in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordBetween(String value1, String value2) {
			addCriterion("password between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotBetween(String value1, String value2) {
			addCriterion("password not between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andResponseTimeIsNull() {
			addCriterion("response_time is null");
			return (Criteria) this;
		}

		public Criteria andResponseTimeIsNotNull() {
			addCriterion("response_time is not null");
			return (Criteria) this;
		}

		public Criteria andResponseTimeEqualTo(Integer value) {
			addCriterion("response_time =", value, "responseTime");
			return (Criteria) this;
		}

		public Criteria andResponseTimeNotEqualTo(Integer value) {
			addCriterion("response_time <>", value, "responseTime");
			return (Criteria) this;
		}

		public Criteria andResponseTimeGreaterThan(Integer value) {
			addCriterion("response_time >", value, "responseTime");
			return (Criteria) this;
		}

		public Criteria andResponseTimeGreaterThanOrEqualTo(Integer value) {
			addCriterion("response_time >=", value, "responseTime");
			return (Criteria) this;
		}

		public Criteria andResponseTimeLessThan(Integer value) {
			addCriterion("response_time <", value, "responseTime");
			return (Criteria) this;
		}

		public Criteria andResponseTimeLessThanOrEqualTo(Integer value) {
			addCriterion("response_time <=", value, "responseTime");
			return (Criteria) this;
		}

		public Criteria andResponseTimeIn(List<Integer> values) {
			addCriterion("response_time in", values, "responseTime");
			return (Criteria) this;
		}

		public Criteria andResponseTimeNotIn(List<Integer> values) {
			addCriterion("response_time not in", values, "responseTime");
			return (Criteria) this;
		}

		public Criteria andResponseTimeBetween(Integer value1, Integer value2) {
			addCriterion("response_time between", value1, value2,
					"responseTime");
			return (Criteria) this;
		}

		public Criteria andResponseTimeNotBetween(Integer value1, Integer value2) {
			addCriterion("response_time not between", value1, value2,
					"responseTime");
			return (Criteria) this;
		}

		public Criteria andNewdateIsNull() {
			addCriterion("newDate is null");
			return (Criteria) this;
		}

		public Criteria andNewdateIsNotNull() {
			addCriterion("newDate is not null");
			return (Criteria) this;
		}

		public Criteria andNewdateEqualTo(Date value) {
			addCriterion("newDate =", value, "newdate");
			return (Criteria) this;
		}

		public Criteria andNewdateNotEqualTo(Date value) {
			addCriterion("newDate <>", value, "newdate");
			return (Criteria) this;
		}

		public Criteria andNewdateGreaterThan(Date value) {
			addCriterion("newDate >", value, "newdate");
			return (Criteria) this;
		}

		public Criteria andNewdateGreaterThanOrEqualTo(Date value) {
			addCriterion("newDate >=", value, "newdate");
			return (Criteria) this;
		}

		public Criteria andNewdateLessThan(Date value) {
			addCriterion("newDate <", value, "newdate");
			return (Criteria) this;
		}

		public Criteria andNewdateLessThanOrEqualTo(Date value) {
			addCriterion("newDate <=", value, "newdate");
			return (Criteria) this;
		}

		public Criteria andNewdateIn(List<Date> values) {
			addCriterion("newDate in", values, "newdate");
			return (Criteria) this;
		}

		public Criteria andNewdateNotIn(List<Date> values) {
			addCriterion("newDate not in", values, "newdate");
			return (Criteria) this;
		}

		public Criteria andNewdateBetween(Date value1, Date value2) {
			addCriterion("newDate between", value1, value2, "newdate");
			return (Criteria) this;
		}

		public Criteria andNewdateNotBetween(Date value1, Date value2) {
			addCriterion("newDate not between", value1, value2, "newdate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table uv_proxy
	 * @mbggenerated  Fri Sep 26 09:48:36 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table uv_proxy
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 19 10:09:25 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
